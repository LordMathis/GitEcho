basePath: /api/v1
definitions:
  backuprepo.BackupRepo:
    properties:
      credentials:
        $ref: '#/definitions/backuprepo.Credentials'
      name:
        type: string
      remote_url:
        type: string
      schedule:
        type: string
    type: object
  backuprepo.Credentials:
    properties:
      key_path:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  server.SuccessResponse:
    properties:
      message:
        type: string
    type: object
  storage.S3Storage:
    properties:
      access_key:
        type: string
      bucket_name:
        type: string
      endpoint:
        type: string
      name:
        type: string
      region:
        type: string
      secret_key:
        type: string
    type: object
info:
  contact: {}
  description: REST API for GitEcho, a tool for backing up Git repositories
  license:
    name: MIT
    url: http://www.opensource.org/licenses/MIT
  title: GitEcho API
  version: "1.0"
paths:
  /repository:
    get:
      consumes:
      - application/json
      description: Get a list of all backup repositories
      produces:
      - application/json
      responses:
        "200":
          description: List of backup repositories
          schema:
            items:
              $ref: '#/definitions/backuprepo.BackupRepo'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get all backup repositories
      tags:
      - backup-repositories
    post:
      consumes:
      - application/json
      description: Create a new backup repository configuration with the given data
      parameters:
      - description: Backup repository data
        in: body
        name: backupRepo
        required: true
        schema:
          $ref: '#/definitions/backuprepo.BackupRepo'
      produces:
      - application/json
      responses:
        "200":
          description: Success response"â€œ
          schema:
            $ref: '#/definitions/server.SuccessResponse'
        "400":
          description: Invalid request body
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Create a new backup repository configuration
      tags:
      - backup-repositories
  /repository/{repo_name}:
    delete:
      description: Delete a backup repository by its name
      parameters:
      - description: Name of the backup repository to delete
        in: path
        name: repo_name
        required: true
        type: string
      responses:
        "200":
          description: Success response
          schema:
            $ref: '#/definitions/server.SuccessResponse'
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Delete a backup repository
      tags:
      - backup-repositories
    get:
      consumes:
      - application/json
      description: Get the backup repository with the given name
      parameters:
      - description: Name of the backup repository to retrieve
        in: path
        name: repo_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Backup repository data
          schema:
            $ref: '#/definitions/backuprepo.BackupRepo'
        "404":
          description: Backup repository not found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get a backup repository by name
      tags:
      - backup-repositories
  /repository/{repo_name}/storage/:
    get:
      description: Get all storages associated with a backup repository by its name
      parameters:
      - description: Name of the backup repository
        in: path
        name: repo_name
        required: true
        type: string
      responses:
        "200":
          description: List of storages associated with the backup repository
          schema:
            items: {}
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get backup repository storages
      tags:
      - backup-repositories
  /repository/{repo_name}/storage/{storage_name}:
    delete:
      description: Remove the association between a storage and a backup repository
        by their names
      parameters:
      - description: Name of the backup repository
        in: path
        name: repo_name
        required: true
        type: string
      - description: Name of the storage
        in: path
        name: storage_name
        required: true
        type: string
      responses:
        "200":
          description: Success response
          schema:
            $ref: '#/definitions/server.SuccessResponse'
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Remove storage from backup repository
      tags:
      - backup-repositories
    post:
      description: Associate a storage with a backup repository by their names
      parameters:
      - description: Name of the backup repository
        in: path
        name: repo_name
        required: true
        type: string
      - description: Name of the storage
        in: path
        name: storage_name
        required: true
        type: string
      responses:
        "200":
          description: Success response
          schema:
            $ref: '#/definitions/server.SuccessResponse'
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Add storage to backup repository
      tags:
      - backup-repositories
  /storage/:
    get:
      description: Get all storage configurations
      produces:
      - application/json
      responses:
        "200":
          description: List of all storage configurations
          schema:
            items: {}
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      tags:
      - storages
  /storage/{storage_conf}:
    delete:
      description: Delete the storage configuration by its name
      parameters:
      - description: Name of the storage
        in: path
        name: storage_conf
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success response
          schema:
            $ref: '#/definitions/server.SuccessResponse'
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Delete storage
      tags:
      - storages
    get:
      description: Get the storage configuration by its name
      parameters:
      - description: Name of the storage
        in: path
        name: storage_conf
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Storage configuration
          schema: {}
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get storage by name
      tags:
      - storages
  /storage/{storage_type}:
    post:
      consumes:
      - application/json
      description: Create a new storage configuration
      parameters:
      - description: Storage type (s3)
        enum:
        - s3
        in: path
        name: storage_type
        required: true
        type: string
      - description: Storage configuration to create
        in: body
        name: storage
        required: true
        schema:
          $ref: '#/definitions/storage.S3Storage'
      produces:
      - application/json
      responses:
        "200":
          description: Success response
          schema:
            $ref: '#/definitions/server.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Create storage
      tags:
      - storages
swagger: "2.0"
